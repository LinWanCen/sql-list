<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.linwancen</groupId>
  <artifactId>sql-list</artifactId>
  <version>1.0-SNAPSHOT</version>
  <description>SQL 清单</description>
  <inceptionYear>2023</inceptionYear>

  <dependencies>
    <!-- xml 解析行号 -->
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom2</artifactId>
      <version>2.0.6.1</version>
    </dependency>

    <!-- MyBatis XML 解析 -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.5.16</version>
    </dependency>

    <!-- SQL 解析 (5.0以上不支持 Java 8) -->
    <dependency>
      <groupId>com.github.jsqlparser</groupId>
      <artifactId>jsqlparser</artifactId>
      <version>4.9</version>
    </dependency>

    <!-- 执行命令行 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <version>1.3</version>
    </dependency>

    <!-- Excel 生成 -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>easyexcel</artifactId>
      <version>3.3.2</version>
    </dependency>

    <!-- 日志框架，optional 避免依赖已经有这个日志框架了 -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>2.17.0</version>
      <optional>true</optional>
    </dependency>

    <!-- 日志异步 -->
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
      <version>3.4.4</version>
    </dependency>

    <!-- 测试框架 -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>7.4.0</version>
      <scope>test</scope>
    </dependency>

  </dependencies>


  <properties>
    <!-- sonarcloud -->
    <sonar.projectKey>LinWanCen_${project.artifactId}</sonar.projectKey>
    <sonar.organization>linwancen</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>

    <java.version>1.8</java.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>

    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>


  <build>
    <finalName>${project.artifactId}</finalName>

    <testResources>
      <!-- maven.resources.overwrite 没设置 true 时不会覆盖，即前面的优先 -->
      <testResource>
        <directory>${basedir}/src/test/resources</directory>
      </testResource>
      <!-- 包含测试目录下的文件 -->
      <testResource>
        <directory>${basedir}/src/main/resources</directory>
      </testResource>
    </testResources>

    <plugins>
      <!-- 生成源码 jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- 拷贝 dependencies 的依赖到 lib 目录 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.2</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <!-- 设置启动类 -->
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>io.github.linwancen.sql.Main</mainClass>
            </manifest>
            <manifestEntries>
              <Class-Path>./</Class-Path>
            </manifestEntries>
          </archive>
          <!-- 打包不带配置文件 -->
          <excludes>
            <exclude>*.xml</exclude>
            <exclude>*.properties</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version>
        <executions>

          <!-- 拷贝外置配置文件和 lib 并压缩成 zip，使用：antrun:run@zip -->
          <execution>
            <id>zip</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <!-- http://ant.apache.org/manual/Tasks/ -->
              <target>
                <copy todir="${project.build.directory}/" overwrite="true">
                  <fileset dir="${basedir}/src/main/resources"/>
                </copy>
                <zip destfile="${project.build.directory}/${project.artifactId}.zip">
                  <fileset dir="${project.basedir}/">
                    <include name="*.md"/>
                  </fileset>
                  <fileset dir="${project.build.directory}/">
                    <include name="lib/"/>
                    <include name="*.sh"/>
                    <include name="*.bat"/>
                    <include name="*.xml"/>
                    <include name="*.properties"/>
                    <include name="${project.artifactId}.jar"/>
                    <exclude name="${project.artifactId}.zip"/>
                  </fileset>
                </zip>
              </target>
            </configuration>
          </execution>

        </executions>
      </plugin>

    </plugins>
  </build>
  <repositories>
    <repository>
      <id>maven_central</id>
      <name>Maven Central</name>
      <url>https://repo.maven.apache.org/maven2/</url>
    </repository>
  </repositories>

</project>